
package view;

import control.ConnectionFactory;
import control.Usuario;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Time;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import static view.AgendaView.atualizaDadosTable;
import static view.AgendaView.db;
import static view.AgendaView.password;
import static view.AgendaView.user;

/**Classe para criação de um compromisso
* @author Wesley Ozebe
* @version 1.0
*/
public class NovoCompromissoView extends javax.swing.JFrame {

    private Date data;
    private Usuario userLogado;
    private static Connection connection;
    private static ConnectionFactory fabrica = new ConnectionFactory();

    JSpinner.DateEditor de;
    JSpinner.DateEditor de2;
    /**
     * Creates new form NovoCompromissoView
     *
     * @param data Data - data que o compromisso sera inserido
     * @param userLogado Usuario - usuario que encontra-se logado no sistema
     */
    public NovoCompromissoView(Date data, Usuario userLogado) {
        this.data = data;
        this.userLogado = userLogado;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Date date = new Date();
        SpinnerDateModel sm = new SpinnerDateModel(date, null, null, Calendar.MINUTE);
        spinner = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();
        salvarBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Date date2 = new Date();
        SpinnerDateModel sm2 = new SpinnerDateModel(date2, null, null, Calendar.MINUTE);
        spinner1 = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Novo compromisso");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Início:");

        spinner.setModel(sm);
        spinner.setToolTipText("Horário de ínicio do compromisso");
        de = new JSpinner.DateEditor(spinner, "hh:mm a");
        spinner.setEditor(de);

        SimpleDateFormat format = ((JSpinner.DateEditor) spinner.getEditor()).getFormat();
        format.applyPattern("HH:mm");

        texto.setColumns(20);
        texto.setRows(5);
        jScrollPane1.setViewportView(texto);

        salvarBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        salvarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/save.png"))); // NOI18N
        salvarBtn.setText("Salvar");
        salvarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Final:");

        spinner1.setModel(sm2);
        spinner1.setToolTipText("Horário final do compromisso");
        de2 = new JSpinner.DateEditor(spinner, "hh:mm a");
        spinner1.setEditor(de2);

        SimpleDateFormat format2 = ((JSpinner.DateEditor) spinner1.getEditor()).getFormat();

        format2.applyPattern("HH:mm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(salvarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(spinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(spinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(salvarBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salvarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarBtnActionPerformed

        try {
            String sql = "insert into compromisso(idUsuario, data_comp, hora_inicio, hora_final, descricao, criado) values\n"
                    + "(?,?,?,?,?, current_timestamp)";

            connection = fabrica.getConnection(db.getDir(), user.getDir(), password.getDir());
            PreparedStatement stmt = connection.prepareStatement(sql);

            String hora_inicio = de.getFormat().format(spinner.getValue());
            String hora_final = de.getFormat().format(spinner1.getValue());
            
            DateFormat formato = new SimpleDateFormat("HH:mm");
            
            java.sql.Time horas_inicio = new java.sql.Time(formato.parse(hora_inicio).getTime());
            java.sql.Time horas_final = new java.sql.Time(formato.parse(hora_final).getTime());
            
            stmt.setInt(1, this.userLogado.getId());

            java.sql.Date sDate = convertUtilToSql(this.data);
            stmt.setDate(2, sDate);
            stmt.setTime(3, horas_inicio);
            stmt.setTime(4, horas_final);
            stmt.setString(5, this.texto.getText());

            stmt.executeUpdate();

            stmt.close();
            connection.close();

            AgendaView.novoBtn.setEnabled(true);
            this.dispose();
            JOptionPane.showMessageDialog(null, "Compromisso salvo com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);

        } catch (ClassNotFoundException | SQLException | IOException | ParseException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível salvar!\n" + ex, "Erro", JOptionPane.ERROR_MESSAGE);

            Logger.getLogger(NovoCompromissoView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_salvarBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int output = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja sair?", "Sair", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (output == 0) {
            AgendaView.novoBtn.setEnabled(true);
            this.dispose();
        } else if (output == 1) {

        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(NovoCompromissoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(NovoCompromissoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(NovoCompromissoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(NovoCompromissoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new NovoCompromissoView().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton salvarBtn;
    private javax.swing.JSpinner spinner;
    private javax.swing.JSpinner spinner1;
    private javax.swing.JTextArea texto;
    // End of variables declaration//GEN-END:variables

    private static java.sql.Date convertUtilToSql(java.util.Date uDate) {
        java.sql.Date sDate = new java.sql.Date(uDate.getTime());
        return sDate;
    }
}
